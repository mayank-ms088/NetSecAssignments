{"ast":null,"code":"var n = 16;\nvar pt = \"28610afc654a55325cb2952406eb9e1f38afa337ef09e8ad7bca8f08a74a486a61b7c3a55cc61cb1abd42ef0dd90cd128016cb7c6923db116e6815b006fa9e6fdd053b9cc1b1e0c623cda22db03a9a1d3f477ec9e9915561ebe3adb8e9bc87f5452ba801ab9b2c5f97147641b5dd7056d5def82044d8d102a700969bde6672e4\";\nvar pt1 = \"18610afc654a55325cb2952406eb9e1f38afa337ef09e8ad7bca8f08a74a486a61b7c3a55cc61cb1abd42ef0dd90cd128016cb7c6923db116e6815b006fa9e6fdd053b9cc1b1e0c623cda22db03a9a1d3f477ec9e9915561ebe3adb8e9bc87f5452ba801ab9b2c5f97147641b5dd7056d5def82044d8d102a700969bde6672e4\";\nvar key_main = \"c253e5df3b1a48d0dce2f27651c9ac39\";\nvar w = 32;\nvar len;\nvar z = 0;\nvar keyl = 16;\nvar output = \"\";\nvar rounds = [];\nvar combines = [];\nvar inp = \"\",\n    l0 = \"\",\n    r0 = \"\";\nvar k = 0;\nvar charts = [];\nvar datap2 = [];\nvar datac2 = [];\nvar change; //hex to bin conversion\n\nfunction hex2bin(s) {\n  var hex = \"0123456789abcdef\";\n  var bin = [\"0000\", \"0001\", \"0010\", \"0011\", \"0100\", \"0101\", \"0110\", \"0111\", \"1000\", \"1001\", \"1010\", \"1011\", \"1100\", \"1101\", \"1110\", \"1111\"];\n  var ans = \"\";\n  var map1 = new Map();\n\n  for (var i = 0; i < 16; i++) {\n    map1.set(hex[i], bin[i]);\n  }\n\n  for (var i = 0; i < s.length; i++) {\n    ans = ans + map1.get(s[i]);\n  }\n\n  return ans;\n} //bin to hex conversion\n\n\nfunction bin2hex(s) {\n  var hex = \"0123456789abcdef\";\n  var bin = [\"0000\", \"0001\", \"0010\", \"0011\", \"0100\", \"0101\", \"0110\", \"0111\", \"1000\", \"1001\", \"1010\", \"1011\", \"1100\", \"1101\", \"1110\", \"1111\"];\n  var ans = \"\";\n  var map1 = new Map();\n\n  for (var i = 0; i < 16; i++) {\n    map1.set(bin[i], hex[i]);\n  }\n\n  for (var i = 0; i < s.length; i += 4) {\n    var ch = \"\";\n    ch += s[i];\n    ch += s[i + 1];\n    ch += s[i + 2];\n    ch += s[i + 3];\n    ans += map1.get(ch);\n  }\n\n  return ans;\n} //Permutation function\n\n\nfunction permute(k, arr, n) {\n  var per = \"\";\n  var i = 0;\n\n  while (i < n) {\n    per += k[arr[i] - 1];\n    i++;\n  }\n\n  return per;\n} //function for left shift\n\n\nfunction shift_left(k, shifts) {\n  var s = \"\";\n\n  for (var i = 0; i < shifts; i++) {\n    for (var j = 1; j < 2 * w - w / 4; j++) {\n      s += k[j];\n    }\n\n    s += k[0];\n    k = s;\n    s = \"\";\n  }\n\n  return k;\n} //function for xor\n\n\nfunction xor_(a, b) {\n  var ans = \"\";\n\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] == b[i]) {\n      ans += \"0\";\n    } else ans += \"1\";\n  }\n\n  console.log(ans);\n  return ans;\n}\n\nfunction encrypt(pt, rkb, rk) {\n  console.log(pt);\n  pt = hex2bin(pt); //console.log(\"68\");\n  //initial permutation for 16 bytes\n\n  var initial_perm16 = [58, 50, 42, 34, 26, 18, 10, 2, 60, 52, 44, 36, 28, 20, 12, 4, 62, 54, 46, 38, 30, 22, 14, 6, 64, 56, 48, 40, 32, 24, 16, 8, 57, 49, 41, 33, 25, 17, 9, 1, 59, 51, 43, 35, 27, 19, 11, 3, 61, 53, 45, 37, 29, 21, 13, 5, 63, 55, 47, 39, 31, 23, 15, 7]; //final permutation for 16 bytes\n\n  var final_perm16 = [40, 8, 48, 16, 56, 24, 64, 32, 39, 7, 47, 15, 55, 23, 63, 31, 38, 6, 46, 14, 54, 22, 62, 30, 37, 5, 45, 13, 53, 21, 61, 29, 36, 4, 44, 12, 52, 20, 60, 28, 35, 3, 43, 11, 51, 19, 59, 27, 34, 2, 42, 10, 50, 18, 58, 26, 33, 1, 41, 9, 49, 17, 57, 25]; //initial permutation for 8 bytes\n\n  var initial_perm8 = [18, 27, 14, 5, 10, 26, 16, 24, 2, 15, 31, 17, 30, 19, 8, 9, 25, 20, 28, 3, 22, 29, 4, 32, 12, 13, 21, 23, 6, 11, 7, 1]; //final permutation for 8 bytes\t\n\n  var final_perm8 = new Array(32);\n\n  for (var i = 0; i < 32; i++) {\n    final_perm8[initial_perm8[i] - 1] = i + 1;\n  } //console.log(final_perm8);\n  //initial permutation for 32 bytes\n\n\n  var initial_perm32 = [10, 77, 84, 21, 106, 42, 18, 89, 66, 7, 94, 48, 82, 81, 78, 28, 123, 54, 56, 103, 102, 41, 100, 125, 74, 12, 24, 122, 46, 109, 126, 15, 112, 105, 26, 75, 58, 35, 120, 53, 34, 108, 40, 107, 96, 110, 98, 95, 118, 92, 117, 83, 2, 115, 111, 59, 90, 19, 127, 99, 79, 71, 69, 61, 128, 93, 44, 101, 6, 91, 87, 63, 116, 1, 114, 47, 22, 68, 124, 73, 70, 80, 72, 57, 88, 86, 104, 55, 121, 9, 76, 17, 30, 45, 51, 50, 64, 13, 60, 62, 14, 49, 52, 27, 65, 33, 23, 25, 36, 38, 43, 119, 32, 20, 113, 39, 97, 85, 29, 3, 67, 37, 16, 11, 8, 31, 4, 5]; //final permutation for 32 bytes\t\n\n  var final_perm32 = new Array(128);\n\n  for (var i = 0; i < 128; i++) {\n    final_perm32[initial_perm32[i] - 1] = i + 1;\n  }\n\n  if (w == 16) pt = permute(pt, initial_perm16, 64);else if (w == 8) pt = permute(pt, initial_perm8, 32);else if (w == 32) pt = permute(pt, initial_perm32, 128); //console.log(\"79\");\n\n  inp += bin2hex(pt) + \" \";\n  var left = pt.substring(0, 2 * w);\n  var right = pt.substring(2 * w);\n  l0 += bin2hex(left) + \" \";\n  r0 += bin2hex(right) + \" \";\n  var exp_d16 = [32, 1, 2, 3, 4, 5, 4, 5, 6, 7, 8, 9, 8, 9, 10, 11, 12, 13, 12, 13, 14, 15, 16, 17, 16, 17, 18, 19, 20, 21, 20, 21, 22, 23, 24, 25, 24, 25, 26, 27, 28, 29, 28, 29, 30, 31, 32, 1];\n  var exp_d8 = [5, 12, 7, 13, 9, 2, 14, 6, 16, 10, 3, 11, 1, 15, 4, 8, 10, 5, 15, 3, 6, 1, 2, 9]; //console.log(exp_d8);\n\n  var exp_d32 = [46, 1, 18, 56, 22, 62, 48, 64, 60, 34, 61, 32, 2, 22, 12, 58, 1, 26, 42, 52, 16, 50, 57, 62, 56, 64, 29, 30, 7, 55, 23, 40, 25, 63, 37, 20, 24, 48, 59, 18, 31, 37, 28, 34, 57, 40, 61, 36, 52, 42, 20, 55, 26, 15, 50, 10, 47, 7, 8, 53, 41, 51, 6, 4, 14, 59, 35, 19, 30, 63, 58, 54, 25, 44, 33, 27, 2, 38, 49, 45, 32, 39, 29, 43, 31, 24, 23, 21, 17, 9, 11, 12, 5, 13, 16, 3]; //console.log(exp_d32);\n  //S-boxes\n\n  var s = [[14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7, 0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8, 4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0, 15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13], [15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10, 3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5, 0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15, 13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9], [10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8, 13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1, 13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7, 1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12], [7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15, 13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9, 10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4, 3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14], [2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9, 14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6, 4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14, 11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3], [12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11, 10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8, 9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6, 4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13], [4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1, 13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6, 1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2, 6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12], [13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7, 1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2, 7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8, 2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11], [9, 4, 11, 3, 1, 15, 10, 14, 13, 8, 7, 6, 5, 12, 2, 0, 7, 11, 3, 1, 14, 6, 12, 2, 15, 13, 5, 9, 10, 8, 4, 0, 1, 5, 14, 8, 13, 3, 11, 9, 15, 12, 6, 0, 7, 2, 10, 4, 11, 15, 14, 12, 13, 8, 1, 2, 3, 4, 5, 9, 7, 10, 6, 0], [7, 10, 3, 11, 15, 1, 5, 14, 12, 13, 8, 0, 6, 9, 2, 4, 2, 7, 4, 11, 10, 3, 15, 13, 9, 8, 6, 14, 5, 1, 0, 12, 4, 0, 12, 14, 13, 8, 11, 9, 15, 5, 10, 6, 7, 3, 2, 1, 2, 1, 15, 0, 10, 7, 6, 14, 13, 11, 4, 8, 9, 5, 12, 3], [9, 14, 11, 12, 5, 1, 15, 2, 10, 4, 13, 6, 7, 8, 3, 0, 2, 3, 12, 11, 6, 13, 8, 10, 15, 5, 0, 14, 7, 9, 4, 1, 6, 9, 2, 1, 15, 10, 4, 0, 11, 13, 8, 14, 7, 5, 3, 12, 12, 9, 6, 2, 0, 10, 4, 13, 14, 8, 11, 7, 5, 3, 15, 1], [6, 4, 12, 11, 10, 5, 14, 1, 15, 13, 9, 7, 2, 8, 0, 3, 3, 8, 9, 1, 11, 13, 15, 2, 10, 14, 5, 7, 4, 6, 12, 0, 5, 2, 15, 12, 13, 10, 7, 11, 8, 9, 6, 14, 1, 4, 3, 0, 10, 7, 2, 5, 15, 12, 13, 14, 9, 8, 4, 6, 11, 1, 0, 3], [6, 11, 12, 2, 13, 3, 15, 8, 9, 5, 14, 1, 7, 10, 0, 4, 4, 0, 6, 1, 14, 15, 11, 9, 10, 13, 8, 5, 7, 3, 2, 12, 5, 12, 9, 10, 13, 2, 7, 0, 15, 14, 3, 6, 1, 8, 11, 4, 8, 1, 0, 6, 4, 5, 12, 14, 13, 7, 11, 15, 9, 10, 3, 2], [14, 13, 10, 11, 15, 12, 8, 1, 6, 3, 4, 7, 2, 9, 0, 5, 7, 1, 14, 8, 15, 11, 13, 10, 12, 9, 6, 5, 3, 4, 2, 0, 14, 2, 4, 7, 15, 1, 11, 8, 6, 13, 9, 5, 12, 3, 0, 10, 13, 1, 9, 10, 14, 6, 11, 15, 5, 2, 8, 7, 4, 3, 12, 0], [14, 0, 8, 9, 6, 13, 15, 3, 11, 1, 12, 5, 2, 4, 10, 7, 7, 12, 3, 13, 14, 10, 15, 11, 9, 8, 6, 2, 5, 0, 1, 4, 3, 14, 1, 10, 11, 5, 9, 8, 15, 13, 12, 4, 7, 2, 6, 0, 3, 1, 7, 15, 13, 4, 14, 9, 12, 0, 8, 5, 11, 10, 2, 6], [11, 2, 15, 5, 13, 10, 7, 8, 3, 4, 12, 14, 9, 6, 1, 0, 2, 4, 6, 12, 10, 8, 14, 1, 15, 13, 9, 5, 7, 11, 0, 3, 7, 15, 3, 4, 14, 5, 11, 1, 9, 13, 8, 2, 6, 10, 12, 0, 13, 11, 14, 15, 5, 12, 1, 2, 10, 4, 7, 9, 6, 8, 3, 0]];\n  var per16 = [16, 7, 20, 21, 29, 12, 28, 17, 1, 15, 23, 26, 5, 18, 31, 10, 2, 8, 24, 14, 32, 27, 3, 9, 19, 13, 30, 6, 22, 11, 4, 25];\n  var per8 = [6, 13, 2, 1, 10, 16, 8, 15, 11, 14, 4, 3, 7, 9, 12, 5];\n  var per32 = [1, 33, 3, 31, 9, 56, 15, 42, 63, 60, 51, 53, 49, 24, 29, 26, 59, 17, 37, 54, 55, 12, 48, 22, 44, 36, 23, 47, 57, 19, 7, 40, 64, 62, 39, 58, 5, 45, 38, 4, 30, 14, 27, 43, 41, 25, 50, 34, 32, 20, 28, 10, 18, 21, 11, 6, 16, 52, 61, 35, 8, 13, 46, 2];\n  var cnt = 0; //loop for all hex letter one by one\n\n  for (var i = 0; i < n; i++) {\n    var right_expanded;\n    if (w == 16) right_expanded = permute(right, exp_d16, 48);else if (w == 8) right_expanded = permute(right, exp_d8, 24);else if (w == 32) right_expanded = permute(right, exp_d32, 96);\n    var x = xor_(rkb[i], right_expanded);\n    var op = \"\";\n\n    for (var j = 0; j < w / 2; j++) {\n      console.log(x[j * 6]);\n      var row = 2 * (x[j * 6].charCodeAt(0) - 48) + (x[j * 6 + 5].charCodeAt(0) - 48);\n      var col = 8 * (x[j * 6 + 1].charCodeAt(0) - 48) + 4 * (x[j * 6 + 2].charCodeAt(0) - 48) + 2 * (x[j * 6 + 3].charCodeAt(0) - 48) + (x[j * 6 + 4].charCodeAt(0) - 48);\n      var val = s[j][16 * row + col];\n      op += String.fromCharCode(val / 8 + 48);\n      val = val % 8;\n      op += String.fromCharCode(val / 4 + 48);\n      val = val % 4;\n      op += String.fromCharCode(val / 2 + 48);\n      val = val % 2;\n      op += String.fromCharCode(val + 48);\n    }\n\n    if (w == 16) op = permute(op, per16, 32);else if (w == 8) op = permute(op, per8, 16);else if (w == 32) op = permute(op, per32, 64);\n    x = xor_(op, left);\n    left = x;\n\n    if (i != n - 1) {\n      right = [left, left = right][0];\n    }\n\n    combines.push(left + right);\n  }\n\n  var combine = left + right;\n  var cipher;\n  if (w == 16) cipher = permute(combine, final_perm16, 64);else if (w == 8) cipher = permute(combine, final_perm8, 32);else if (w == 32) cipher = permute(combine, final_perm32, 128);\n  cipher = bin2hex(cipher);\n  z++;\n  return cipher;\n} /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nfunction DES(n, w, isChecked) {\n  var key = key_main;\n\n  if (isChecked) {\n    key = \"01010101010101010101010101010101\"; //console.log(\"Weak\");\n  }\n\n  w /= 2;\n  pt = pt.substring(0, w);\n  pt1 = pt1.substring(0, w);\n  len = pt.length;\n  keyl = key.length;\n  key = key.substring(0, w);\n  rounds = [];\n  combines = [];\n  inp = \"\";\n  l0 = \"\";\n  r0 = \"\";\n  console.log(\"PlainText= \" + pt);\n  console.log(\"Key= \" + key);\n  var datap = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  var datac = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  var data = pt;\n\n  for (var i = 0; i < len; i++) {\n    if (data[i].charCodeAt(0) >= 97) datap[data[i].charCodeAt(0) - 87]++;else datap[data[i].charCodeAt(0) - 48]++;\n  }\n\n  while (len % w != 0) {\n    pt += \"0\";\n    len++;\n  }\n\n  output = \"\"; // console.log(len);\n  // console.log(pt);\n  // console.log(key);\n\n  key = hex2bin(key);\n  var keyp16 = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4];\n  var keyp8 = [6, 18, 11, 9, 12, 3, 10, 23, 27, 19, 30, 14, 28, 25, 2, 26, 13, 22, 20, 21, 29, 17, 31, 15, 4, 5, 7, 1];\n  var keyp32 = [55, 1, 25, 23, 61, 95, 97, 92, 107, 19, 115, 116, 109, 90, 71, 85, 75, 91, 12, 125, 111, 100, 7, 67, 110, 126, 83, 113, 17, 105, 124, 35, 31, 28, 101, 103, 43, 26, 123, 10, 122, 51, 117, 99, 108, 106, 11, 68, 121, 15, 46, 102, 5, 45, 98, 119, 34, 77, 57, 52, 70, 20, 37, 93, 78, 73, 53, 63, 79, 94, 62, 81, 66, 127, 49, 60, 58, 33, 74, 39, 59, 44, 69, 50, 87, 89, 65, 36, 30, 82, 38, 9, 42, 29, 14, 21, 84, 47, 27, 18, 6, 22, 86, 76, 118, 54, 114, 41, 3, 13, 4, 2];\n  if (w == 16) key = permute(key, keyp16, 56);else if (w == 8) key = permute(key, keyp8, 28);else if (w == 32) key = permute(key, keyp32, 112); //console.log(key);\n\n  var shift_table = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];\n  var key_comp16 = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32];\n  var key_comp8 = [12, 25, 4, 27, 20, 19, 24, 18, 28, 22, 21, 17, 3, 15, 9, 14, 10, 5, 8, 6, 11, 1, 2, 13];\n  var key_comp32 = [85, 102, 9, 65, 35, 53, 99, 29, 20, 45, 104, 75, 100, 4, 21, 14, 23, 3, 13, 98, 106, 6, 27, 79, 57, 42, 111, 12, 69, 38, 108, 64, 54, 32, 96, 51, 91, 36, 82, 74, 110, 70, 88, 84, 78, 86, 66, 11, 76, 67, 60, 77, 56, 68, 52, 50, 94, 92, 105, 55, 97, 49, 62, 63, 28, 48, 40, 59, 44, 80, 71, 101, 87, 1, 41, 73, 46, 30, 83, 22, 26, 34, 5, 103, 37, 18, 24, 89, 17, 47, 19, 10, 25, 7, 8, 2];\n  var left = key.substring(0, 2 * w - w / 4);\n  var right = key.substring(2 * w - w / 4);\n  var rkb = [];\n  var rk = [];\n\n  for (var i = 0; i < n; i++) {\n    //Shifting \n    left = shift_left(left, shift_table[i]);\n    right = shift_left(right, shift_table[i]); //Combining \n\n    var combine = left + right;\n    var RoundKey = \"\"; //Key Compression \n\n    if (w == 16) RoundKey = permute(combine, key_comp16, 48);else if (w == 8) RoundKey = permute(combine, key_comp8, 24);else if (w == 32) RoundKey = permute(combine, key_comp32, 96);\n    rkb.push(RoundKey);\n    rk.push(bin2hex(RoundKey));\n  }\n\n  var xs = [];\n  var pq = [];\n\n  for (var i = 0; i < n; i++) {\n    xs.push(i + 1);\n    pq.push(0);\n  }\n\n  var cipher = \"\";\n  var cipher1 = \"\"; //parent function to encrypt the text.\n\n  for (var i = 0; i < len / w; i++) {\n    cipher += encrypt(pt.substring(i * w, (i + 1) * w), rkb, rk);\n    rounds.push(combines);\n    combines = [];\n    cipher1 += encrypt(pt1.substring(i * w, (i + 1) * w), rkb, rk);\n    rounds.push(combines); //console.log(rounds);\n\n    for (var j = 0; j < n; j++) {\n      for (var k = 0; k < len * 4; k++) {\n        if (rounds[0][j][k] != rounds[1][j][k]) pq[j]++;\n      }\n    } //console.log(pq);\n    //ciphers.push(cipher);\n\n\n    rounds = [];\n    combines = [];\n    console.log(pq);\n  }\n\n  data = cipher; //console.log(cipher);\n\n  for (var i = 0; i < len; i++) {\n    if (data[i].charCodeAt(0) >= 97) datac[data[i].charCodeAt(0) - 87]++;else datac[data[i].charCodeAt(0) - 48]++;\n  }\n\n  for (var i = 0; i < 16; i++) {\n    datac[i] = datac[i] * 100 / len;\n    datap[i] = datap[i] * 100 / len;\n  }\n\n  for (var i = 0; i < n; i++) {\n    output += \"Key= \" + rk[i] + \"\\n\\n\";\n  }\n\n  output += \"Ciphertext= \" + cipher;\n  return {\n    plain: {\n      x: xs,\n      y: pq\n    },\n    mixed: {\n      p: datap,\n      c: datac\n    },\n    keys: output\n  };\n  /*var Plaintext = {\n      x: xs,\n      y: pq,\n      type: 'scatter'\n  };\n   var da = [Plaintext];\n  var layout = {\n      title: \"Avalanche effect\",\n      xaxis: {\n          title: \"Round Number\"\n      },\n      yaxis: {\n          title: \"No of bit changed\"\n      }\n  };\n  Plotly.newPlot('myDiv', da, layout);\n   var chart = new CanvasJS.Chart(\"chartcontainer\",\n      {\n          title: {\n              text: \"Round: \" + n + \", Half Block Size: \" + w\n          },\n          legend: {\n              cursor: \"pointer\",\n              verticalAlign: \"bottom\",\n              horizontalAlign: \"left\",\n              dockInsidePlotArea: true,\n           },\n          data: [\n              {\n                  type: \"line\",\n                  showInLegend: true,\n                  name: \"plaintext\",\n                  dataPoints: [\n                      { y: datap[0] },\n                      { y: datap[1] },\n                      { y: datap[2] },\n                      { y: datap[3] },\n                      { y: datap[4] },\n                      { y: datap[5] },\n                      { y: datap[6] },\n                      { y: datap[7] },\n                      { y: datap[8] },\n                      { y: datap[9] },\n                      { y: datap[10] },\n                      { y: datap[11] },\n                      { y: datap[12] },\n                      { y: datap[13] },\n                      { y: datap[14] },\n                      { y: datap[15] }\n                  ]\n              },\n              {\n                  type: \"line\",\n                  showInLegend: true,\n                  name: \"ciphertext\",\n                  dataPoints: [\n                      { y: datac[0] },\n                      { y: datac[1] },\n                      { y: datac[2] },\n                      { y: datac[3] },\n                      { y: datac[4] },\n                      { y: datac[5] },\n                      { y: datac[6] },\n                      { y: datac[7] },\n                      { y: datac[8] },\n                      { y: datac[9] },\n                      { y: datac[10] },\n                      { y: datac[11] },\n                      { y: datac[12] },\n                      { y: datac[13] },\n                      { y: datac[14] },\n                      { y: datac[15] }\n                  ]\n              }\n          ]\n      });\n  chart.render();\n  // output+=\"After Initial Permutation: \"+inp+\"\\n\";\n   // output+=\"\\n After Splitting: \\n L0= \"+l0+\"\\n R0= \"+r0+\"\\n\\n\";\n   for (var i = 0; i < n; i++) {\n      output += \"Key= \" + rk[i] + \"\\n\\n\";\n  }\n  output += \"Ciphertext= \" + cipher;\n  console.log(\"ciphertext= \" + cipher);\n  $(\"#ans\").val(output);*/\n}\n\n;\nexport default DES;","map":{"version":3,"sources":["/home/montooboss/Desktop/NET_SEC_PROJ/NetSecAssignments/PA1/src/utils/crypto.js"],"names":["n","pt","pt1","key_main","w","len","z","keyl","output","rounds","combines","inp","l0","r0","k","charts","datap2","datac2","change","hex2bin","s","hex","bin","ans","map1","Map","i","set","length","get","bin2hex","ch","permute","arr","per","shift_left","shifts","j","xor_","a","b","console","log","encrypt","rkb","rk","initial_perm16","final_perm16","initial_perm8","final_perm8","Array","initial_perm32","final_perm32","left","substring","right","exp_d16","exp_d8","exp_d32","per16","per8","per32","cnt","right_expanded","x","op","row","charCodeAt","col","val","String","fromCharCode","push","combine","cipher","DES","isChecked","key","datap","datac","data","keyp16","keyp8","keyp32","shift_table","key_comp16","key_comp8","key_comp32","RoundKey","xs","pq","cipher1","plain","y","mixed","p","c","keys"],"mappings":"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","sourcesContent":["var n = 16;\nvar pt = \"28610afc654a55325cb2952406eb9e1f38afa337ef09e8ad7bca8f08a74a486a61b7c3a55cc61cb1abd42ef0dd90cd128016cb7c6923db116e6815b006fa9e6fdd053b9cc1b1e0c623cda22db03a9a1d3f477ec9e9915561ebe3adb8e9bc87f5452ba801ab9b2c5f97147641b5dd7056d5def82044d8d102a700969bde6672e4\";\nvar pt1 = \"18610afc654a55325cb2952406eb9e1f38afa337ef09e8ad7bca8f08a74a486a61b7c3a55cc61cb1abd42ef0dd90cd128016cb7c6923db116e6815b006fa9e6fdd053b9cc1b1e0c623cda22db03a9a1d3f477ec9e9915561ebe3adb8e9bc87f5452ba801ab9b2c5f97147641b5dd7056d5def82044d8d102a700969bde6672e4\";\nvar key_main = \"c253e5df3b1a48d0dce2f27651c9ac39\";\nvar w = 32;\nvar len;\nvar z = 0;\nvar keyl = 16;\nvar output = \"\";\nvar rounds = [];\nvar combines = [];\nvar inp = \"\", l0 = \"\", r0 = \"\";\nvar k = 0;\nvar charts = [];\nvar datap2 = [];\nvar datac2 = [];\nvar change;\n\n//hex to bin conversion\nfunction hex2bin(s) {\n    var hex = \"0123456789abcdef\";\n    var bin = [\"0000\", \"0001\", \"0010\", \"0011\", \"0100\", \"0101\", \"0110\", \"0111\", \"1000\", \"1001\", \"1010\", \"1011\", \"1100\", \"1101\", \"1110\", \"1111\"];\n    var ans = \"\";\n    var map1 = new Map();\n    for (var i = 0; i < 16; i++) map1.set(hex[i], bin[i]);\n    for (var i = 0; i < s.length; i++) ans = ans + map1.get(s[i]);\n    return ans;\n}\n//bin to hex conversion\nfunction bin2hex(s) {\n    var hex = \"0123456789abcdef\";\n    var bin = [\"0000\", \"0001\", \"0010\", \"0011\", \"0100\", \"0101\", \"0110\", \"0111\", \"1000\", \"1001\", \"1010\", \"1011\", \"1100\", \"1101\", \"1110\", \"1111\"];\n    var ans = \"\";\n    var map1 = new Map();\n    for (var i = 0; i < 16; i++) map1.set(bin[i], hex[i]);\n    for (var i = 0; i < s.length; i += 4) {\n        var ch = \"\";\n        ch += s[i];\n        ch += s[i + 1];\n        ch += s[i + 2];\n        ch += s[i + 3];\n        ans += map1.get(ch);\n    }\n    return ans;\n}\n\n//Permutation function\nfunction permute(k, arr, n) {\n    var per = \"\";\n    var i = 0;\n    while (i < n) {\n        per += k[arr[i] - 1];\n        i++;\n    }\n    return per;\n}\n//function for left shift\nfunction shift_left(k, shifts) {\n    var s = \"\";\n    for (var i = 0; i < shifts; i++) {\n        for (var j = 1; j < (2 * w - w / 4); j++) {\n            s += k[j];\n        }\n        s += k[0];\n        k = s;\n        s = \"\";\n    }\n    return k;\n}\n//function for xor\nfunction xor_(a, b) {\n    var ans = \"\";\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] == b[i]) {\n            ans += \"0\";\n        }\n        else ans += \"1\";\n    }\n    console.log(ans)\n    return ans;\n}\n\nfunction encrypt(pt, rkb, rk) {\n    console.log(pt);\n    pt = hex2bin(pt);\n    //console.log(\"68\");\n    //initial permutation for 16 bytes\n    var initial_perm16 = [58, 50, 42, 34, 26, 18, 10, 2,\n        60, 52, 44, 36, 28, 20, 12, 4,\n        62, 54, 46, 38, 30, 22, 14, 6,\n        64, 56, 48, 40, 32, 24, 16, 8,\n        57, 49, 41, 33, 25, 17, 9, 1,\n        59, 51, 43, 35, 27, 19, 11, 3,\n        61, 53, 45, 37, 29, 21, 13, 5,\n        63, 55, 47, 39, 31, 23, 15, 7];\n    //final permutation for 16 bytes\n    var final_perm16 = [40, 8, 48, 16, 56, 24, 64, 32,\n        39, 7, 47, 15, 55, 23, 63, 31,\n        38, 6, 46, 14, 54, 22, 62, 30,\n        37, 5, 45, 13, 53, 21, 61, 29,\n        36, 4, 44, 12, 52, 20, 60, 28,\n        35, 3, 43, 11, 51, 19, 59, 27,\n        34, 2, 42, 10, 50, 18, 58, 26,\n        33, 1, 41, 9, 49, 17, 57, 25];\n    //initial permutation for 8 bytes\n    var initial_perm8 = [18, 27, 14, 5, 10, 26, 16, 24,\n        2, 15, 31, 17, 30, 19, 8, 9,\n        25, 20, 28, 3, 22, 29, 4, 32,\n        12, 13, 21, 23, 6, 11, 7, 1];\n    //final permutation for 8 bytes\t\n    var final_perm8 = new Array(32);\n    for (var i = 0; i < 32; i++) final_perm8[initial_perm8[i] - 1] = i + 1;\n    //console.log(final_perm8);\n    //initial permutation for 32 bytes\n    var initial_perm32 = [10, 77, 84, 21, 106, 42, 18, 89,\n        66, 7, 94, 48, 82, 81, 78, 28,\n        123, 54, 56, 103, 102, 41, 100, 125,\n        74, 12, 24, 122, 46, 109, 126, 15,\n        112, 105, 26, 75, 58, 35, 120, 53,\n        34, 108, 40, 107, 96, 110, 98, 95,\n        118, 92, 117, 83, 2, 115, 111, 59,\n        90, 19, 127, 99, 79, 71, 69, 61,\n        128, 93, 44, 101, 6, 91, 87, 63,\n        116, 1, 114, 47, 22, 68, 124, 73,\n        70, 80, 72, 57, 88, 86, 104, 55,\n        121, 9, 76, 17, 30, 45, 51, 50,\n        64, 13, 60, 62, 14, 49, 52, 27,\n        65, 33, 23, 25, 36, 38, 43, 119,\n        32, 20, 113, 39, 97, 85, 29, 3,\n        67, 37, 16, 11, 8, 31, 4, 5];\n    //final permutation for 32 bytes\t\n    var final_perm32 = new Array(128);\n    for (var i = 0; i < 128; i++) final_perm32[initial_perm32[i] - 1] = i + 1;\n\n    if (w == 16)\n        pt = permute(pt, initial_perm16, 64);\n    else if (w == 8) pt = permute(pt, initial_perm8, 32);\n    else if (w == 32) pt = permute(pt, initial_perm32, 128);\n    //console.log(\"79\");\n    inp += bin2hex(pt) + \" \";\n    var left = pt.substring(0, 2 * w);\n    var right = pt.substring(2 * w);\n    l0 += bin2hex(left) + \" \";\n    r0 += bin2hex(right) + \" \";\n\n    var exp_d16 = [32, 1, 2, 3, 4, 5, 4, 5,\n        6, 7, 8, 9, 8, 9, 10, 11,\n        12, 13, 12, 13, 14, 15, 16, 17,\n        16, 17, 18, 19, 20, 21, 20, 21,\n        22, 23, 24, 25, 24, 25, 26, 27,\n        28, 29, 28, 29, 30, 31, 32, 1];\n    var exp_d8 = [5, 12, 7, 13, 9, 2, 14, 6, 16, 10, 3, 11, 1, 15, 4, 8, 10, 5, 15, 3, 6, 1, 2, 9];\n    //console.log(exp_d8);\n    var exp_d32 = [46, 1, 18, 56, 22, 62, 48, 64, 60, 34, 61, 32, 2, 22, 12, 58, 1, 26, 42, 52, 16, 50, 57, 62, 56, 64, 29, 30, 7, 55, 23, 40, 25, 63, 37, 20, 24, 48, 59, 18, 31, 37, 28, 34, 57, 40, 61, 36, 52, 42, 20, 55, 26, 15, 50, 10, 47, 7, 8, 53, 41, 51, 6, 4, 14, 59, 35, 19, 30, 63, 58, 54, 25, 44, 33, 27, 2, 38, 49, 45, 32, 39, 29, 43, 31, 24, 23, 21, 17, 9, 11, 12, 5, 13, 16, 3]\n    //console.log(exp_d32);\n    //S-boxes\n    var s = [\n        [14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7,\n            0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8,\n            4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0,\n            15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13],\n\n        [15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10,\n            3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5,\n            0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15,\n            13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9],\n\n        [10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8,\n            13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1,\n            13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7,\n            1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12],\n\n        [7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15,\n            13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9,\n            10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4,\n            3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14],\n\n        [2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9,\n            14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6,\n            4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14,\n            11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3],\n\n        [12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11,\n            10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8,\n            9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6,\n            4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13],\n\n        [4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1,\n            13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6,\n            1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2,\n            6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12],\n\n        [13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7,\n            1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2,\n            7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8,\n            2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11],\n\n        [9, 4, 11, 3, 1, 15, 10, 14, 13, 8, 7, 6, 5, 12, 2, 0, 7, 11, 3, 1, 14, 6, 12, 2, 15, 13, 5, 9, 10, 8, 4, 0, 1, 5, 14, 8, 13, 3, 11, 9, 15, 12, 6, 0, 7, 2, 10, 4, 11, 15, 14, 12, 13, 8, 1, 2, 3, 4, 5, 9, 7, 10, 6, 0],\n\n        [7, 10, 3, 11, 15, 1, 5, 14, 12, 13, 8, 0, 6, 9, 2, 4, 2, 7, 4, 11, 10, 3, 15, 13, 9, 8, 6, 14, 5, 1, 0, 12, 4, 0, 12, 14, 13, 8, 11, 9, 15, 5, 10, 6, 7, 3, 2, 1, 2, 1, 15, 0, 10, 7, 6, 14, 13, 11, 4, 8, 9, 5, 12, 3],\n\n        [9, 14, 11, 12, 5, 1, 15, 2, 10, 4, 13, 6, 7, 8, 3, 0, 2, 3, 12, 11, 6, 13, 8, 10, 15, 5, 0, 14, 7, 9, 4, 1, 6, 9, 2, 1, 15, 10, 4, 0, 11, 13, 8, 14, 7, 5, 3, 12, 12, 9, 6, 2, 0, 10, 4, 13, 14, 8, 11, 7, 5, 3, 15, 1],\n\n        [6, 4, 12, 11, 10, 5, 14, 1, 15, 13, 9, 7, 2, 8, 0, 3, 3, 8, 9, 1, 11, 13, 15, 2, 10, 14, 5, 7, 4, 6, 12, 0, 5, 2, 15, 12, 13, 10, 7, 11, 8, 9, 6, 14, 1, 4, 3, 0, 10, 7, 2, 5, 15, 12, 13, 14, 9, 8, 4, 6, 11, 1, 0, 3],\n\n        [6, 11, 12, 2, 13, 3, 15, 8, 9, 5, 14, 1, 7, 10, 0, 4, 4, 0, 6, 1, 14, 15, 11, 9, 10, 13, 8, 5, 7, 3, 2, 12, 5, 12, 9, 10, 13, 2, 7, 0, 15, 14, 3, 6, 1, 8, 11, 4, 8, 1, 0, 6, 4, 5, 12, 14, 13, 7, 11, 15, 9, 10, 3, 2],\n\n        [14, 13, 10, 11, 15, 12, 8, 1, 6, 3, 4, 7, 2, 9, 0, 5, 7, 1, 14, 8, 15, 11, 13, 10, 12, 9, 6, 5, 3, 4, 2, 0, 14, 2, 4, 7, 15, 1, 11, 8, 6, 13, 9, 5, 12, 3, 0, 10, 13, 1, 9, 10, 14, 6, 11, 15, 5, 2, 8, 7, 4, 3, 12, 0],\n\n        [14, 0, 8, 9, 6, 13, 15, 3, 11, 1, 12, 5, 2, 4, 10, 7, 7, 12, 3, 13, 14, 10, 15, 11, 9, 8, 6, 2, 5, 0, 1, 4, 3, 14, 1, 10, 11, 5, 9, 8, 15, 13, 12, 4, 7, 2, 6, 0, 3, 1, 7, 15, 13, 4, 14, 9, 12, 0, 8, 5, 11, 10, 2, 6],\n\n        [11, 2, 15, 5, 13, 10, 7, 8, 3, 4, 12, 14, 9, 6, 1, 0, 2, 4, 6, 12, 10, 8, 14, 1, 15, 13, 9, 5, 7, 11, 0, 3, 7, 15, 3, 4, 14, 5, 11, 1, 9, 13, 8, 2, 6, 10, 12, 0, 13, 11, 14, 15, 5, 12, 1, 2, 10, 4, 7, 9, 6, 8, 3, 0]\n    ];\n\n    var per16 = [16, 7, 20, 21,\n        29, 12, 28, 17,\n        1, 15, 23, 26,\n        5, 18, 31, 10,\n        2, 8, 24, 14,\n        32, 27, 3, 9,\n        19, 13, 30, 6,\n        22, 11, 4, 25];\n\n    var per8 = [6, 13, 2, 1, 10, 16, 8, 15, 11, 14, 4, 3, 7, 9, 12, 5];\n    var per32 = [1, 33, 3, 31, 9, 56, 15, 42, 63, 60, 51, 53, 49, 24, 29, 26, 59, 17, 37, 54, 55, 12, 48, 22, 44, 36, 23, 47, 57, 19, 7, 40, 64, 62, 39, 58, 5, 45, 38, 4, 30, 14, 27, 43, 41, 25, 50, 34, 32, 20, 28, 10, 18, 21, 11, 6, 16, 52, 61, 35, 8, 13, 46, 2];\n\n    var cnt = 0;\n    //loop for all hex letter one by one\n    for (var i = 0; i < n; i++) {\n\n        var right_expanded;\n        if (w == 16) right_expanded = permute(right, exp_d16, 48);\n        else if (w == 8) right_expanded = permute(right, exp_d8, 24);\n        else if (w == 32) right_expanded = permute(right, exp_d32, 96);\n        var x = xor_(rkb[i], right_expanded);\n\n        var op = \"\";\n        for (var j = 0; j < w / 2; j++) {\n            console.log(x[j*6]);\n\n\n            var row = 2 * (x[j * 6].charCodeAt(0) - 48) + (x[j * 6 + 5].charCodeAt(0) - 48);\n            var col = 8 * (x[j * 6 + 1].charCodeAt(0) - 48) + 4 * (x[j * 6 + 2].charCodeAt(0) - 48) +\n                2 * (x[j * 6 + 3].charCodeAt(0) - 48) + (x[j * 6 + 4].charCodeAt(0) - 48);\n\n            var val = s[j][16 * row + col];\n\n            op += String.fromCharCode(val / 8 + 48);\n            val = val % 8;\n            op += String.fromCharCode(val / 4 + 48);\n            val = val % 4;\n            op += String.fromCharCode(val / 2 + 48);\n            val = val % 2;\n            op += String.fromCharCode(val + 48);\n        }\n\n        if (w == 16) op = permute(op, per16, 32);\n        else if (w == 8) op = permute(op, per8, 16);\n        else if (w == 32) op = permute(op, per32, 64);\n\n        x = xor_(op, left);\n\n        left = x;\n\n        if (i != n - 1) {\n            right = [left, left = right][0];\n        }\n        combines.push(left + right);\n    }\n\n    var combine = left + right;\n\n    var cipher;\n    if (w == 16) cipher = permute(combine, final_perm16, 64);\n    else if (w == 8) cipher = permute(combine, final_perm8, 32);\n    else if (w == 32) cipher = permute(combine, final_perm32, 128);\n\n    cipher = bin2hex(cipher);\n    z++;\n    return cipher;\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction DES(n,w,isChecked) {\n    var key = key_main;\n    if (isChecked) {\n        key = \"01010101010101010101010101010101\";\n        //console.log(\"Weak\");\n    }\n\n    w /= 2;\n    pt = pt.substring(0, w);\n    pt1 = pt1.substring(0, w);\n    len = pt.length;\n    keyl = key.length;\n    key = key.substring(0, w);\n    rounds = [];\n    combines = [];\n    inp = \"\";\n    l0 = \"\";\n    r0 = \"\";\n    console.log(\"PlainText= \" + pt);\n    console.log(\"Key= \" + key);\n\n    var datap = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    var datac = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    var data = pt;\n    for (var i = 0; i < len; i++) {\n        if (data[i].charCodeAt(0) >= 97) datap[data[i].charCodeAt(0) - 87]++;\n        else datap[data[i].charCodeAt(0) - 48]++;\n    }\n    while (len % w != 0) {\n        pt += \"0\";\n        len++;\n    }\n\n    output = \"\";\n    // console.log(len);\n    // console.log(pt);\n    // console.log(key);\n    key = hex2bin(key);\n    var keyp16 = [57, 49, 41, 33, 25, 17, 9,\n        1, 58, 50, 42, 34, 26, 18,\n        10, 2, 59, 51, 43, 35, 27,\n        19, 11, 3, 60, 52, 44, 36,\n        63, 55, 47, 39, 31, 23, 15,\n        7, 62, 54, 46, 38, 30, 22,\n        14, 6, 61, 53, 45, 37, 29,\n        21, 13, 5, 28, 20, 12, 4];\n\n    var keyp8 = [6, 18, 11, 9, 12, 3, 10, 23, 27, 19, 30, 14, 28, 25, 2, 26, 13, 22, 20, 21, 29, 17, 31, 15, 4, 5, 7, 1];\n    var keyp32 = [55, 1, 25, 23, 61, 95, 97, 92, 107, 19, 115, 116, 109, 90, 71, 85, 75, 91, 12, 125, 111, 100, 7, 67, 110, 126, 83, 113, 17, 105, 124, 35, 31, 28, 101, 103, 43, 26, 123, 10, 122, 51, 117, 99, 108, 106, 11, 68, 121, 15, 46, 102, 5, 45, 98, 119, 34, 77, 57, 52, 70, 20, 37, 93, 78, 73, 53, 63, 79, 94, 62, 81, 66, 127, 49, 60, 58, 33, 74, 39, 59, 44, 69, 50, 87, 89, 65, 36, 30, 82, 38, 9, 42, 29, 14, 21, 84, 47, 27, 18, 6, 22, 86, 76, 118, 54, 114, 41, 3, 13, 4, 2];\n\n    if (w == 16) key = permute(key, keyp16, 56);\n    else if (w == 8) key = permute(key, keyp8, 28);\n    else if (w == 32) key = permute(key, keyp32, 112)\n    //console.log(key);\n    var shift_table = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];\n\n    var key_comp16 = [14, 17, 11, 24, 1, 5,\n        3, 28, 15, 6, 21, 10,\n        23, 19, 12, 4, 26, 8,\n        16, 7, 27, 20, 13, 2,\n        41, 52, 31, 37, 47, 55,\n        30, 40, 51, 45, 33, 48,\n        44, 49, 39, 56, 34, 53,\n        46, 42, 50, 36, 29, 32];\n\n    var key_comp8 = [12, 25, 4, 27, 20, 19, 24, 18, 28, 22, 21, 17, 3, 15, 9, 14, 10, 5, 8, 6, 11, 1, 2, 13];\n    var key_comp32 = [85, 102, 9, 65, 35, 53, 99, 29, 20, 45, 104, 75, 100, 4, 21, 14, 23, 3, 13, 98, 106, 6, 27, 79, 57, 42, 111, 12, 69, 38, 108, 64, 54, 32, 96, 51, 91, 36, 82, 74, 110, 70, 88, 84, 78, 86, 66, 11, 76, 67, 60, 77, 56, 68, 52, 50, 94, 92, 105, 55, 97, 49, 62, 63, 28, 48, 40, 59, 44, 80, 71, 101, 87, 1, 41, 73, 46, 30, 83, 22, 26, 34, 5, 103, 37, 18, 24, 89, 17, 47, 19, 10, 25, 7, 8, 2]\n\n    var left = key.substring(0, 2 * w - w / 4);\n    var right = key.substring(2 * w - w / 4);\n\n    var rkb = [];\n    var rk = [];\n\n    for (var i = 0; i < n; i++) {\n\n        //Shifting \n\n        left = shift_left(left, shift_table[i]);\n        right = shift_left(right, shift_table[i]);\n\n        //Combining \n        var combine = left + right;\n        var RoundKey = \"\";\n        //Key Compression \n        if (w == 16) RoundKey = permute(combine, key_comp16, 48);\n        else if (w == 8) RoundKey = permute(combine, key_comp8, 24);\n        else if (w == 32) RoundKey = permute(combine, key_comp32, 96);\n\n        rkb.push(RoundKey);\n        rk.push(bin2hex(RoundKey));\n    }\n    var xs = [];\n    var pq = [];\n    for (var i = 0; i < n; i++) {\n        xs.push(i + 1);\n        pq.push(0);\n    }\n    var cipher = \"\";\n    var cipher1 = \"\";\n    //parent function to encrypt the text.\n    for (var i = 0; i < len / w; i++) {\n        cipher += encrypt(pt.substring(i * w, (i + 1) * w), rkb, rk);\n        rounds.push(combines);\n        combines = [];\n        cipher1 += encrypt(pt1.substring(i * w, (i + 1) * w), rkb, rk);\n        rounds.push(combines);\n        //console.log(rounds);\n        for (var j = 0; j < n; j++) {\n            for (var k = 0; k < (len * 4); k++) {\n                if (rounds[0][j][k] != rounds[1][j][k]) pq[j]++;\n            }\n        }\n        //console.log(pq);\n        //ciphers.push(cipher);\n        rounds = [];\n        combines = [];\n        console.log(pq);\n    }\n\n    data = cipher;\n    //console.log(cipher);\n    for (var i = 0; i < len; i++) {\n        if (data[i].charCodeAt(0) >= 97) datac[data[i].charCodeAt(0) - 87]++;\n        else datac[data[i].charCodeAt(0) - 48]++;\n    }\n    for (var i = 0; i < 16; i++) {\n        datac[i] = (datac[i] * 100) / len;\n        datap[i] = (datap[i] * 100) / len;\n    }\n\n    for (var i = 0; i < n; i++) {\n        output += \"Key= \" + rk[i] + \"\\n\\n\";\n    }\n    output += \"Ciphertext= \" + cipher;\n    return ({\n        plain: {\n            x: xs,\n            y: pq\n        },\n        mixed:{\n            p:datap,\n            c:datac\n        },\n        keys:output\n    });\n    /*var Plaintext = {\n        x: xs,\n        y: pq,\n        type: 'scatter'\n    };\n\n    var da = [Plaintext];\n    var layout = {\n        title: \"Avalanche effect\",\n        xaxis: {\n            title: \"Round Number\"\n        },\n        yaxis: {\n            title: \"No of bit changed\"\n        }\n    };\n    Plotly.newPlot('myDiv', da, layout);\n\n    var chart = new CanvasJS.Chart(\"chartcontainer\",\n        {\n            title: {\n                text: \"Round: \" + n + \", Half Block Size: \" + w\n            },\n            legend: {\n                cursor: \"pointer\",\n                verticalAlign: \"bottom\",\n                horizontalAlign: \"left\",\n                dockInsidePlotArea: true,\n\n            },\n            data: [\n                {\n                    type: \"line\",\n                    showInLegend: true,\n                    name: \"plaintext\",\n                    dataPoints: [\n                        { y: datap[0] },\n                        { y: datap[1] },\n                        { y: datap[2] },\n                        { y: datap[3] },\n                        { y: datap[4] },\n                        { y: datap[5] },\n                        { y: datap[6] },\n                        { y: datap[7] },\n                        { y: datap[8] },\n                        { y: datap[9] },\n                        { y: datap[10] },\n                        { y: datap[11] },\n                        { y: datap[12] },\n                        { y: datap[13] },\n                        { y: datap[14] },\n                        { y: datap[15] }\n                    ]\n                },\n                {\n                    type: \"line\",\n                    showInLegend: true,\n                    name: \"ciphertext\",\n                    dataPoints: [\n                        { y: datac[0] },\n                        { y: datac[1] },\n                        { y: datac[2] },\n                        { y: datac[3] },\n                        { y: datac[4] },\n                        { y: datac[5] },\n                        { y: datac[6] },\n                        { y: datac[7] },\n                        { y: datac[8] },\n                        { y: datac[9] },\n                        { y: datac[10] },\n                        { y: datac[11] },\n                        { y: datac[12] },\n                        { y: datac[13] },\n                        { y: datac[14] },\n                        { y: datac[15] }\n                    ]\n                }\n            ]\n        });\n    chart.render();\n    // output+=\"After Initial Permutation: \"+inp+\"\\n\";\n\n    // output+=\"\\n After Splitting: \\n L0= \"+l0+\"\\n R0= \"+r0+\"\\n\\n\";\n\n    for (var i = 0; i < n; i++) {\n        output += \"Key= \" + rk[i] + \"\\n\\n\";\n    }\n    output += \"Ciphertext= \" + cipher;\n    console.log(\"ciphertext= \" + cipher);\n    $(\"#ans\").val(output);*/\n};\nexport default DES;\n"]},"metadata":{},"sourceType":"module"}